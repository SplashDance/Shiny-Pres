A New Approach to Predicting a Car's Resale Value
========================================================
author: Steve S
date: `r lubridate::today()`
transition: fade
font-family: 'Verdana'

What's wrong with the status quo?
========================================================
incremental: true
title: true

The current approach to valuing a used car--by merely aggregating the results of thousands of transactions--has two *major* disadvantages:

1. __Time-Consuming__
    * It takes a lot of time to collect the necessary data.
1. __Expensive__
    * The data collection process itself can be extremely costly.


The Solution:
========================================================
type: prompt

The solution is to employ sophisticated machine learning techniques to distill
the main determinants of used-car prices and wrap these predictions in an
easy-to-use, portable application.

```{r, echo=FALSE}

```

What We've Created:
========================================================

As a "proof-of-concept", we've used a dataset comprised of data from the sales of
various models of cars built by different General Motors cars from the 2005
model year.

```{r, echo=FALSE}
library(reshape2)
library(dplyr)

data(cars, package="caret")
# First must add an index column for melting & join
cars <- cbind(cars, 1:804)
names(cars)[19] <- "index"

car.brand <- cars[, c(8:13, 19)]
car.brand <- melt(car.brand, id.vars='index')
# str(car.brand)
car.brand <- car.brand[car.brand$value == 1, 1:2]


car.type <- cars[, c(14:18, 19)]
car.type <- melt(car.type, id.vars='index')
car.type <- car.type[car.type$value == 1, 1:2]

# df <- cbind(cars[, 1:7], car.brand, car.type)
df <- inner_join(x=cars[, c(1:7, 19)], y=car.brand, by='index')
df <- inner_join(x=df, y=car.type, by='index')
names(df)[9:10] <- c("Brand", "Type")
df <- arrange(df, index)
df$Brand <- relevel(df$Brand, "Chevy")
df <- df[, -1]

df$Type <- factor(df$Type)
df$Brand <- factor(df$Brand)

df$Cruise <- factor(df$Cruise, levels=c(0,1), labels=c("No", "Yes"))
df$Sound <- factor(df$Sound, levels=c(0,1), labels=c("Standard", "Premium"))
df$Leather <- factor(df$Leather, levels=c(0,1), labels=c("Regular", "Leather"))

head(df)
```

Using the App:
========================================================

Using the App is simple and straightforward--simply click on the desired
attributes and let the shiny app predict the car's re-sale value automatically.
